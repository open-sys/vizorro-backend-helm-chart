{{- if .Values.dbMigrate.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "chart.fullname" . }}-db-migrate-job
  labels:
    {{- include "chart.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook-weight": "5"
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: 4
  template:
    metadata:
      labels:
        {{- include "chart.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      containers:
      - name: db-migrator
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/usr/bin/sh"]
        args:
        - "-c"
        - "cd DB && PGPASSWORD=$(STORAGE_PASS) PGPORT=$(STORAGE_PORT) /app/DB/migrate.sh $(STORAGE_SERVER) $(STORAGE_DB) $(STORAGE_USER)"
        {{- if .Values.env.existingSecret }}
        envFrom:
        - secretRef:
            name: {{ .Values.env.existingSecret }}
        {{- end }}
{{- end }}
